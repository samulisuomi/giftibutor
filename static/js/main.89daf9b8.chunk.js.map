{"version":3,"sources":["PersonTable.js","PersonForm.js","App.js","serviceWorker.js","index.js"],"names":["PersonTable","handleExclusionChange","name","event","_this","props","onExclusionChange","target","value","handlePersonDelete","onPersonDelete","_this2","this","_this$props","classes","exclusionOptions","people","length","react_default","a","createElement","Paper_default","className","root","Table_default","TableHead_default","TableRow_default","TableCell_default","removeCell","TableBody_default","map","person","exclusion","key","NativeSelect_default","onChange","exclusionSelect","noExclusionSelect","nullOption","filter","children","giftee","IconButton_default","onClick","ClearRounded_default","removeIcon","PureComponent","withStyles","theme","width","overflowX","backgroundColor","fontSize","color","noSelection","textAlign","MIN_PEOPLE","PersonForm","state","exclusions","handleNameChange","setState","handleSubmit","preventDefault","_this$state","clearedPeople","Object","objectSpread","toConsumableArray","concat","formatName","trim","isAddDisabled","_this$state2","formattedName","some","renderGenerateGiftees","isGenerateGifteesDisabled","react","Button_default","variant","disabled","type","generateGiftees","shuffledPeople","shuffle","giftees","slice","newPeople","index","excludedName","newExclusions","pair","has","Set","_this$state3","getExclusionOptions","getExclusionsByName","reduce","exclusionsByName","_objectSpread2","names","Array","from","defineProperty","_this$state4","peopleWithExclusions","src_PersonTable","noValidate","onSubmit","TextField_default","label","margin","createMuiTheme","palette","primary","main","secondary","amber","App","styles","BrowserRouter","basename","process","Switch","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gkBA2CMA,6MASJC,sBAAwB,SAAAC,GAAI,OAAI,SAAAC,GAC9BC,EAAKC,MAAMC,kBAAkBJ,EAAMC,EAAMI,OAAOC,WAGlDC,mBAAqB,SAAAP,GAAI,OAAI,SAAAC,GAC3BC,EAAKC,MAAMK,eAAeR,6EAGnB,IAAAS,EAAAC,KAAAC,EACuCD,KAAKP,MAA3CS,EADDD,EACCC,QAASC,EADVF,EACUE,iBAAkBC,EAD5BH,EAC4BG,OAEnC,OAAOA,EAAOC,OACZC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAOG,UAAYR,EAAQS,MACzBL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACED,EAAAC,EAAAC,cAACK,EAAAN,EAAD,KACED,EAAAC,EAAAC,cAACM,EAAAP,EAAD,KACED,EAAAC,EAAAC,cAACO,EAAAR,EAAD,aACAD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,yBACAD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,eACAD,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAWG,UAAYR,EAAQc,YAA/B,YAGJV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,KACGH,EAAOc,IAAI,SAAAC,GACV,IAAMvB,EAAQuB,EAAOC,WAAa,GAElC,OACEd,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAUc,IAAMF,EAAO7B,MACrBgB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KAAaY,EAAO7B,MACpBgB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACED,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACEX,MAAQA,EACR2B,SAAWxB,EAAKV,sBAAsB8B,EAAO7B,MAC7CA,KAAK,YACLoB,UAAYd,EAAQM,EAAQsB,gBAAkBtB,EAAQuB,mBAEtDnB,EAAAC,EAAAC,cAAA,UAAQE,UAAYR,EAAQwB,WAAY9B,MAAM,IAA9C,aACEO,EACGwB,OAAO,SAAArC,GAAI,OAAIA,IAAS6B,EAAO7B,OAC/B4B,IAAI,SAAA5B,GAAI,OACPgB,EAAAC,EAAAC,cAAA,UACEa,IAAM/B,EACNM,MAAQN,EACRsC,SAAWtC,QAKvBgB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KAAaY,EAAOU,QACpBvB,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAWG,UAAYR,EAAQc,YAC7BV,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAYwB,QAAUhC,EAAKF,mBAAmBsB,EAAO7B,OACnDgB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAkBG,UAAYR,EAAQ+B,qBASpD,YArEkBC,iBAyEXC,uBApGA,SAAAC,GAAK,MAAK,CACvBzB,KAAM,CACJ0B,MAAO,OACPC,UAAW,OACXC,gBAAiB,WAEnBf,gBAAiB,CACfgB,SAAU,aAEZf,kBAAmB,CACjBe,SAAU,YACVC,MAAO,sBAETC,YAAa,CACX/B,KAAM,CACJ8B,MAAO,QAGXzB,WAAY,CACVqB,MAAO,MACPM,UAAW,UAEbV,WAAY,CACVQ,MAAO,aA6EIN,CAAmB/C,qBC1G5BwD,EAAa,EAoMJC,6MAjMbC,MAAQ,CACNxD,KAAM,GAENc,OAAQ,CACN,CACEd,KAAM,MACNuC,OAAQ,MAEV,CACEvC,KAAM,MACNuC,OAAQ,MAEV,CACEvC,KAAM,OACNuC,OAAQ,MAEV,CACEvC,KAAM,SACNuC,OAAQ,OAGZkB,WAAY,MAGdC,iBAAmB,SAAAzD,GACjBC,EAAKyD,SAAS,CACZ3D,KAAMC,EAAMI,OAAOC,WAIvBsD,aAAe,SAAA3D,GACbA,EAAM4D,iBADgB,IAAAC,EAGG5D,EAAKsD,MAAtB1C,EAHcgD,EAGdhD,OAAQd,EAHM8D,EAGN9D,KAEV+D,EAAgBjD,EAAOc,IAAI,SAAAC,GAAM,OAAAmC,OAAAC,EAAA,EAAAD,CAAA,GAClCnC,EADkC,CAErCU,OAAQ,SAGVrC,EAAKyD,SAAS,CACZ3D,KAAM,GACNc,OAAOkD,OAAAE,EAAA,EAAAF,CAAMD,GAAPI,OAAA,CAAsB,CAC1BnE,KAAME,EAAKkE,WAAWpE,GACtBuC,OAAQ,aAKd6B,WAAa,SAAApE,GACX,OAAOA,EAAKqE,UAGdC,cAAgB,WAAM,IAAAC,EACKrE,EAAKsD,MAAtBxD,EADYuE,EACZvE,KAAMc,EADMyD,EACNzD,OAEd,IAAKd,EAAKe,OAAQ,OAAO,EAEzB,IAAMyD,EAAgBtE,EAAKkE,WAAWpE,GAEtC,OAAOc,EAAO2D,KAAK,SAAA5C,GAAM,OAAIA,EAAO7B,OAASwE,OAG/CE,sBAAwB,WAAM,IAGtBC,EAFazE,EAAKsD,MAAhB1C,OAEiCC,OAASuC,EAElD,OACEtC,EAAAC,EAAAC,cAAC0D,EAAA,SAAD,KACID,EACA3D,EAAAC,EAAAC,cAAA,yBACiBoC,EADjB,2CAGE,KACJtC,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACEqB,SAAS,mBACTwC,QAAQ,YACR3B,MAAM,UACN4B,SAAWJ,EACXK,KAAK,SACLvC,QAAUvC,EAAK+E,uBAOzBA,gBAAkB,WAAM,IACdnE,EAAWZ,EAAKsD,MAAhB1C,OAEFoE,EAAiBC,IAAQrE,GACzBsE,EAAOpB,OAAAE,EAAA,EAAAF,CAAQkB,EAAeG,MAAM,IAA7BlB,OAAA,CAAiCe,EAAe,KAEvDI,EAAYxE,EAAOc,IAAI,SAACC,EAAQ0D,GACpC,IAAMhD,EAAS6C,EAAQG,GAEvB,OAAOvB,OAAAC,EAAA,EAAAD,CAAA,GACFnC,EADL,CAEEU,OAAQA,EAAOvC,SAInBE,EAAKyD,SAAS,CACZ7C,OAAQwE,OAIZvF,sBAAwB,SAACC,EAAMwF,GAAiB,IACtC/B,EAAevD,EAAKsD,MAApBC,WAEFgC,EAAgBD,EAAYxB,OAAAE,EAAA,EAAAF,CAC7BP,EAAWpB,OAAO,SAAAqD,GAAI,OAAKA,EAAKC,IAAI3F,KAAU0F,EAAKC,IAAIH,MAD1BrB,OAAA,CAEhC,IAAIyB,IAAI,CAAE5F,EAAMwF,MACd/B,EAAWpB,OAAO,SAAAqD,GAAI,OAAKA,EAAKC,IAAI3F,KAAU0F,EAAKC,IAAIH,KAE3DtF,EAAKyD,SAAS,CACZF,WAAYgC,OAIhBlF,mBAAqB,SAAAP,GAAQ,IAAA6F,EACI3F,EAAKsD,MAA5B1C,EADmB+E,EACnB/E,OAAQ2C,EADWoC,EACXpC,WAEhBvD,EAAKyD,SAAS,CACZ7C,OAAQA,EAAOuB,OAAO,SAAAR,GAAM,OAAIA,EAAO7B,OAASA,IAChDyD,WAAYA,EAAWpB,OAAO,SAAAqD,GAAI,OAAKA,EAAKC,IAAI3F,UAIpD8F,oBAAsB,WAGpB,OAFmB5F,EAAKsD,MAAhB1C,OAEMc,IAAI,SAAAC,GAAM,OAAIA,EAAO7B,UAGrC+F,oBAAsB,WAGpB,OAFuB7F,EAAKsD,MAApBC,WAEUuC,OAAO,SAACC,EAAkBnE,GAAc,IAAAoE,EAClDC,EAAQC,MAAMC,KAAKvE,GAEzB,OAAOkC,OAAAC,EAAA,EAAAD,CAAA,GACFiC,GADLC,EAAA,GAAAlC,OAAAsC,EAAA,EAAAtC,CAAAkC,EAEGC,EAAM,GAAKA,EAAM,IAFpBnC,OAAAsC,EAAA,EAAAtC,CAAAkC,EAGGC,EAAM,GAAKA,EAAM,IAHpBD,KAKC,6EAGI,IAAAK,EACkB7F,KAAK8C,MAAtBxD,EADDuG,EACCvG,KAAMc,EADPyF,EACOzF,OAERmF,EAAmBvF,KAAKqF,sBACxBS,EAAuB1F,EAAOc,IAAI,SAAAC,GAAM,OAAAmC,OAAAC,EAAA,EAAAD,CAAA,GACzCnC,EADyC,CAE5CC,UAAWmE,EAAiBpE,EAAO7B,OAAS,SAG9C,OACEgB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAACuF,EAAD,CACE3F,OAAS0F,EACT3F,iBAAmBH,KAAKoF,sBACxBtF,eAAiBE,KAAKH,mBACtBH,kBAAoBM,KAAKX,wBAE3BiB,EAAAC,EAAAC,cAAA,QACEwF,YAAU,EACVC,SAAWjG,KAAKkD,cAEhB5C,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,CACE4F,MAAM,OACNvG,MAAQN,EACRiC,SAAWvB,KAAKgD,iBAChBoD,OAAO,WAET9F,EAAAC,EAAAC,cAAC2D,EAAA5D,EAAD,CACEG,UAAU,aACVkB,SAAS,MACTwC,QAAQ,YACR3B,MAAM,UACN4B,SAAWrE,KAAK4D,gBAChBU,KAAK,YAGPtE,KAAKgE,gCA5LU9B,iBCHnBE,EAAQiE,yBAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAWC,OA6BAC,mLAvBX,OACErG,EAAAC,EAAAC,cAACoG,EAAA,iBAAD,CAAkBxE,MAAOA,GACvB9B,EAAAC,EAAAC,cAACqG,EAAA,EAAD,CAAQC,SAAWC,eACjBzG,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,cAChBJ,EAAAC,EAAAC,cAAA,yBAIFF,EAAAC,EAAAC,cAAA,QAAME,UAAU,YACdJ,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAYvE,IAClCvC,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAW,kBAAO9G,EAAAC,EAAAC,cAAA,QAAMoB,SAAS,YAC7DtB,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOG,UAAW,kBAAO9G,EAAAC,EAAAC,cAAA,QAAMoB,SAAS,6BAftCM,iBCNEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.89daf9b8.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport NativeSelect from '@material-ui/core/NativeSelect';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearRoundedIcon from '@material-ui/icons/ClearRounded';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto',\n    backgroundColor: '#f5f3da'\n  },\n  exclusionSelect: {\n    fontSize: '0.8125rem'\n  },\n  noExclusionSelect: {\n    fontSize: '0.8125rem',\n    color: 'rgba(0, 0, 0, 0.5)'\n  },\n  noSelection: {\n    root: {\n      color: 'red'\n    }\n  },\n  removeCell: {\n    width: '1px',\n    textAlign: 'center'\n  },\n  removeIcon: {\n    color: '#dc5757'\n  }\n});\n\nclass PersonTable extends PureComponent {\n  static propTypes = {\n    classes: PropTypes.object.isRequired,\n    people: PropTypes.array.isRequired,\n    exclusionOptions: PropTypes.array.isRequired,\n    onPersonDelete: PropTypes.func.isRequired,\n    onExclusionChange: PropTypes.func.isRequired\n  }\n\n  handleExclusionChange = name => event => {\n    this.props.onExclusionChange(name, event.target.value);\n  }\n\n  handlePersonDelete = name => event => {\n    this.props.onPersonDelete(name);\n  }\n\n  render() {\n    const { classes, exclusionOptions, people } = this.props;\n\n    return people.length ? (\n      <Paper className={ classes.root }>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Don't match with</TableCell>\n              <TableCell>Giftee</TableCell>\n              <TableCell className={ classes.removeCell }>Remove</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {people.map(person => {\n              const value = person.exclusion || '';\n\n              return (\n                <TableRow key={ person.name }>\n                  <TableCell>{ person.name }</TableCell>\n                  <TableCell>\n                    <NativeSelect\n                      value={ value }\n                      onChange={ this.handleExclusionChange(person.name) }\n                      name=\"exclusion\"\n                      className={ value ? classes.exclusionSelect : classes.noExclusionSelect }\n                    >\n                      <option className={ classes.nullOption} value=\"\">Select...</option>\n                      { exclusionOptions\n                          .filter(name => name !== person.name)\n                          .map(name => (\n                            <option\n                              key={ name }\n                              value={ name }\n                              children={ name }\n                            />\n                          )) }\n                    </NativeSelect>\n                  </TableCell>\n                  <TableCell>{ person.giftee }</TableCell>\n                  <TableCell className={ classes.removeCell }>\n                    <IconButton onClick={ this.handlePersonDelete(person.name) }>\n                      <ClearRoundedIcon className={ classes.removeIcon }/>\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </Paper>\n    ) : null;\n  }\n}\n\nexport default withStyles(styles)(PersonTable);\n","import React, { PureComponent, Fragment } from 'react';\nimport './PersonForm.css'\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport PersonTable from './PersonTable'\n\nimport shuffle from 'lodash/shuffle';\n\nconst MIN_PEOPLE = 2;\n\nclass PersonForm extends PureComponent {\n  state = {\n    name: '',\n    // people: []\n    people: [\n      {\n        name: \"Uno\",\n        giftee: null\n      },\n      {\n        name: \"Dos\",\n        giftee: null\n      },\n      {\n        name: \"Tres\",\n        giftee: null\n      },\n      {\n        name: \"Cuatro\",\n        giftee: null\n      },\n    ],\n    exclusions: []\n  }\n\n  handleNameChange = event => {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const { people, name } = this.state;\n\n    const clearedPeople = people.map(person => ({\n      ...person,\n      giftee: null\n    })) \n\n    this.setState({\n      name: '',\n      people: [ ...clearedPeople, {\n        name: this.formatName(name),\n        giftee: null\n      }]\n    });\n  }\n  \n  formatName = name => {\n    return name.trim()\n  }\n\n  isAddDisabled = () => {\n    const { name, people } = this.state;\n\n    if (!name.length) return true\n\n    const formattedName = this.formatName(name);\n\n    return people.some(person => person.name === formattedName);\n  }\n\n  renderGenerateGiftees = () => {\n    const { people } = this.state;\n\n    const isGenerateGifteesDisabled = people.length < MIN_PEOPLE;\n\n    return (\n      <Fragment>\n        { isGenerateGifteesDisabled ? (\n          <p>\n            Add at least { MIN_PEOPLE } people to be able to generate giftees.\n          </p>\n        ) : null }\n        <p>\n          <Button\n            children=\"Generate giftees\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={ isGenerateGifteesDisabled }\n            type=\"submit\"\n            onClick={ this.generateGiftees }\n          />\n        </p>\n      </Fragment>\n    )\n  }\n\n  generateGiftees = () => {\n    const { people } = this.state;\n\n    const shuffledPeople = shuffle(people);\n    const giftees = [ ...shuffledPeople.slice(1), shuffledPeople[0] ];\n\n    const newPeople = people.map((person, index) => {\n      const giftee = giftees[index];\n\n      return {\n        ...person,\n        giftee: giftee.name\n      };\n    })\n\n    this.setState({\n      people: newPeople\n    });\n  }\n\n  handleExclusionChange = (name, excludedName) => {\n    const { exclusions } = this.state;\n\n    const newExclusions = excludedName ? [\n      ...exclusions.filter(pair => !pair.has(name) && !pair.has(excludedName)),\n      new Set([ name, excludedName ])\n    ] : exclusions.filter(pair => !pair.has(name) && !pair.has(excludedName));\n\n    this.setState({\n      exclusions: newExclusions\n    });\n  }\n\n  handlePersonDelete = name => {\n    const { people, exclusions } = this.state;\n\n    this.setState({\n      people: people.filter(person => person.name !== name),\n      exclusions: exclusions.filter(pair => !pair.has(name)),\n    });\n  }\n\n  getExclusionOptions = () => {\n    const { people } = this.state;\n\n    return people.map(person => person.name);\n  }\n\n  getExclusionsByName = () => {\n    const { exclusions } = this.state;\n\n    return exclusions.reduce((exclusionsByName, exclusion) => {\n      const names = Array.from(exclusion);\n\n      return {\n        ...exclusionsByName,\n        [names[0]]: names[1],\n        [names[1]]: names[0]\n      }\n    }, {})\n  }\n\n  render() {\n    const { name, people } = this.state;\n\n    const exclusionsByName = this.getExclusionsByName()\n    const peopleWithExclusions = people.map(person => ({\n      ...person,\n      exclusion: exclusionsByName[person.name] || null\n    }));\n\n    return (\n      <div className=\"PersonForm\">\n        <PersonTable\n          people={ peopleWithExclusions }\n          exclusionOptions={ this.getExclusionOptions() }\n          onPersonDelete={ this.handlePersonDelete }\n          onExclusionChange={ this.handleExclusionChange }\n        />\n        <form\n          noValidate\n          onSubmit={ this.handleSubmit }\n        >\n          <TextField\n            label=\"Name\"\n            value={ name }\n            onChange={ this.handleNameChange }\n            margin=\"normal\"\n          />\n          <Button\n            className=\"add-person\"\n            children=\"Add\"\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={ this.isAddDisabled() }\n            type=\"submit\"\n          />\n        </form>\n        { this.renderGenerateGiftees() }\n      </div>\n    );\n  }\n}\n\nexport default PersonForm;\n","import React, { PureComponent } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport amber from '@material-ui/core/colors/amber';\n\nimport PersonForm from './PersonForm'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#81c784',\n    },\n    secondary: amber\n  }\n});\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router basename={ process.env.PUBLIC_URL }>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <h1>\n                Giftibutor\n              </h1>\n            </header>\n            <main className=\"App-main\">\n              <Switch>\n                <Route path=\"/\" exact component={ PersonForm } />\n                <Route path=\"/giftee\" exact component={() => (<span children=\"TODO\" />)} />\n                <Route component={() => (<span children=\"Not Found\" />)} />\n              </Switch>\n            </main>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}